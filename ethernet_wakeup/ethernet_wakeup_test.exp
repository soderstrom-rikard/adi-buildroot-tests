#!/usr/bin/expect
#
# Test power wake up through ethernet
#
# Usage:
#   ./ethernet_wakeup_test.exp board_type
#
# Example:
#   ./ethernet_wakeup_test.exp BF537-STAMP
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit"
source ../common/spawn_kermit.exp

step "Boot kernel"
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs  $bootargs_param1
source ../common/kernel_boot.exp

set standby_pattern "Syncing filesystems \.\.\. done\.\r\nFreezing user space processes \.\.\. \\\(elapsed.*seconds\\\) done\.\r\nFreezing remaining freezable tasks \.\.\. \\\(elapsed.*seconds\\\) done\.\r\nSuspending console\\\(s\\\) \\\(use no_console_suspend to debug\\\)"

proc standby_test_case {} {
    global case_num
    global kernel_prompt
    global standby_pattern
    global errorInfo
    global target_mac
    global targetip

    set timeout 10
    incr case_num
    send "echo standby > /sys/power/state"
    sleep 1
    send "\r"
    while 1 {
        expect {
            -re $standby_pattern {
                case_pass $case_num
                break
            }
            timeout {
                send_user "Standby fail\n"
                case_fail $case_num
            }
        }
    }

    sleep 1
    incr case_num
    send_user "wol -i $targetip $target_mac\n"
    if [ catch {exec wol -i $targetip $target_mac} ] {
        send_user "FAIL: wake on lan on PC\n"
        send_user "$errorInfo\n"
        case_fail $case_num
    } else {
        send_user "PASS: wake on lan on PC\n"
        case_pass $case_num
    }

    set timeout 10
    incr case_num
    while 1 {
        expect {
            -re "Restarting tasks.*done\.\r\n$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                send_user "Wake up timeout\n"
                case_fail $case_num
            }
        }
    }

    set timeout 5
    expect -re "Full\r\n|lpa 0x41E1\r\n"
}


step "Start testing"
set case_num 0
set Total_Count 5
sleep 5
send "\r"
expect -re $kernel_prompt

#[#6113]ping host PC so IP/MAC of target board is stored in host route table
set timeout 20
incr case_num
send "ping -c 5 $serverip\r"
while 1 {
    expect {
        -re "5 packets received.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send "ethtool -s eth0 wol g\r"
while 1 {
    expect {
        -re "(\[fF]ail|\[eE]rror|ethtool:).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

for {set count 1} {$count <= $Total_Count} {incr count} {
    standby_test_case
    sleep 5
    send_user "\nStandby test round $count pass\n\n"
}

set timeout 5
incr case_num
send "ethtool -s eth0 wol d\r"
while 1 {
    expect {
        -re "(\[fF]ail|\[eE]rror|ethtool:).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 10
incr case_num
send "echo standby > /sys/power/state"
sleep 1
send "\r"
while 1 {
    expect {
        -re $standby_pattern {
            case_pass $case_num
            break
        }
        timeout {
            send_user "Standby fail\n"
            case_fail $case_num
        }
    }
}

sleep 1
incr case_num
send_user "wol -i $targetip $target_mac\n"
if [ catch {exec wol -i $targetip $target_mac} ] {
    send_user "FAIL: wake on lan on PC\n"
    send_user "$errorInfo\n"
    case_fail $case_num
} else {
    send_user "PASS: wake on lan on PC\n"
    case_pass $case_num
}

set timeout 20
incr case_num
while 1 {
    expect {
        -nocase -re "\[0-9a-f]" {
            send_user "FAIL: should not wake up\n"
            case_fail $case_num
        }
        timeout {
            case_pass $case_num
            break
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
