#!/usr/bin/expect

#
# This usb device test script is for Gadget audio dirver on bf548-ezkit with Linux host PC
#
#
# USB gadget audio driver test
#
# Usage:
#   ./gadget_audio_test.exp board_type musb_mode
#
# Example:
#   ./gadget_audio_test.exp BF609-EZKIT dma
#

source ../common/kernel_config.exp

if { $argc < 2 } {
    puts "Please input: board_type, musb_mode(pio or dma)"
    exit
}
set musb_mode [lindex $argv 1]
set TITLE [title "$argv0"]
append TITLE " ($musb_mode)"
set log_name gadget_audio_${musb_mode}_test_log

log_file $log_name
send_user "Starting $argv0\n"
send_user "\n#### musb_mode is $musb_mode. ####\n"


step "Start kermit"
source ../common/spawn_kermit.exp

step "Boot kernel"
# Different bootargs can be set here.
# For example:
# set bootargs $bootargs_param1
source ../common/kernel_boot.exp

step "Start testing."
set case_num 0

incr case_num
set timeout 10
send "modprobe g_audio\r"
while 1 {
    expect {
        -re "modprobe:|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re "g_audio ready.*high-speed config.*Linux USB Audio Gadget" {
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 10
send "lsmod\r"
while 1 {
    expect {
        -re "lsmod:|\[eE]rror|\[fF]ail|Hardware Trace" {
            case_fail $case_num
        }
        -re "g_audio.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 5
send "cat /proc/asound/cards\r"
while 1 {
    expect {
        -re "(\[nN]o such|\[eE]rror|\[fF]ail).*$kernel_prompt" {
            case_fail $case_num
        }
        -re "adau1x61.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 15
send "amixer cset name='Headphone Playback Switch' on; amixer cset name='Headphone Playback Volume' 40; amixer cset name='Right Playback Mixer Right DAC Switch' on; amixer cset name='Left Playback Mixer Left DAC Switch' on; amixer cset name='DSP Bypass Playback Switch' on; amixer cset name='DSP Bypass Capture Switch' on; amixer cset name='Digital Capture Volume' 255; amixer cset name='Input 2 Capture Volume' 7; amixer cset name='Input 4 Capture Volume' 7;\r"
while 1 {
    expect {
        -re $kernel_prompt {
            case_pass $case_num
                break
        }
        timeout {
            case_fail $case_num
        }
    }
}


spawn /bin/bash
set host_spawn_id $spawn_id

incr case_num
set timeout 5
send "lsusb\r"
while 1 {
    expect {
        -re "Linux Foundation Audio Gadget.*$sh_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

#it seems gadget audio need at least 5s before it can work
sleep 5

incr case_num
set timeout 30
send "aplay -D plug:hw:1 ../bluetoothalsa/test.wav\r"
while 1 {
    expect {
        -nocase -re "error|fail" {
            case_fail $case_num
        }
        -re "Playing WAVE.*Rate 44100 Hz, Stereo.*$sh_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
expect -nocase -re "error|fail"

set spawn_id $kermit_spawn_id

set timeout 5
expect -nocase -re "error|fail"

incr case_num
set timeout 5
send "modprobe -r g_audio\r"
while 1 {
    expect {
        -re "modprobe:|\[eE]rror|\[fF]ail|Hardware Trace:" {
            expect -re $kernel_prompt
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}


set spawn_id $host_spawn_id

incr case_num
set timeout 5
send "dmesg |tail -2\r"
while 1 {
    expect {
        -re "USB disconnect.*$sh_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
