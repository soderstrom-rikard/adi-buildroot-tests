#!/usr/bin/expect
#
# Build script for sqlite test.
#
# Usage:
#   ./build_sqlite_kernel.exp board_type
#
# Example:
#   ./build_sqlite_kernel.exp BF537-STAMP
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $src_root/testsuites/common
step "Make default config"
source make_default_config.exp

if [ catch { exec grep BR2_BFIN_FLAT=y $src_root/.config } ] {
    set binary_flat 0
} else {
    set binary_flat 1
}
send_user "\n#### binary_flat is $binary_flat. ####\n"

step "Make kernel config"
cd $src_root
set timeout 300
spawn make ARCH=$arch linux-config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(NEW\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "($anomalous_option) \\\[\[^\]]+/.]" {
            send "\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            send_user "\nEnd of configuration\n"
            break
        }

        timeout {
            send_user "\n\nFATAL ERROR: config prompt timeout in make config\n"
            exit
        }
    }
}

step "user space config"
cd $src_root
set timeout 300
spawn make config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(NEW\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "gettext \\\(BR2_PACKAGE_GETTEXT\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Use libgettext.a instead of libgettext.so.*BR2_PACKAGE_GETTEXT_STATIC.*\\\[.*]" {
            if { $binary_flat == 1 } {
                send "Y\r"
            } else {
                send "\r"
            }
        }

        -re "pkg-config.*PKG_CONFIG.*\\\[.*]" {
            send "Y\r"
        }

        -re "sqlite \\\(BR2_PACKAGE_SQLITE\\\) \\\[.*]" {
            send "Y\r"
        }

        -re "Command-line editing.*BR2_PACKAGE_SQLITE_READLINE.*\\\[.*]" {
            send "Y\r"
        }

        -re "sqlite test.*BR2_PACKAGE_SQLITE_TEST.*\\\[.*]" {
            send "Y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            send_user "\nEnd of configuration\n"
            break
        }

        timeout {
            send_user "\n\nFATAL ERROR: config prompt timeout in make config\n"
            exit
        }
    }
}

cd $src_root/testsuites/common
step "Make"
source make_kernel.exp

cd $src_root/testsuites/common
step "Copy image"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
