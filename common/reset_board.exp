#!/usr/bin/expect

log_file reset_board_test_log
send_user "Starting reset_board_test.exp\n"

source ./kernel_config.exp

set step_sequence_number    1

step "Run reset_board."

spawn su
sleep .5
while 1 {
    expect {
        -re "\[Pp]assword:" {
            sleep .5
            send "$password\r"
            break
        }
        timeout {
            send_user "Fail to su"
            break
        }
    }
}

while 1 {
    expect {
        "#" {
            break
        }
        timeout {
            send_user "Fail to su as root"
            break
        }
    }
}


set su_id $spawn_id

send "reset_board 2\r"
while 1 {
    expect {
        -re "powering OFF.* ON" {
            break
        }
        timeout {
            send_user "Failed reset board."
            break
        }
    }
}

step "Start kermit"

#step "Start up kermit on port $ttydev"
# Now set up the kermit parameters.
#
set kparams     [list "set line $ttydev\r"]
lappend kparams "set speed $baud_rate\r"
lappend kparams "set carrier-watch off\r"
lappend kparams "set handshake none\r"
lappend kparams "set flow-control none\r"
lappend kparams "robust\r"
lappend kparams "set file type bin\r"
lappend kparams "set file name lit\r"
lappend kparams "set rec pack 1000\r"
lappend kparams "set send pack 1000\r"
lappend kparams "set window 5\r"
lappend kparams "set escape 255\r"
set nkparams [llength $kparams]

set timeout 50
spawn kermit
# We need to save the id because resetting the board will overwrite it.
set kermit_spawn_id $spawn_id

while 1 {
    expect {
        "Type ?" { }
        "ermit>" { break }
        "not found" {
            puts "ERROR: Failed to start up kermit"
        }
        timeout {
            puts "ERROR: Time out starting up kermit"
        }
    }
}

for {set i 0} {$i < $nkparams} {incr i} {
    send [lindex $kparams $i]
    while 1 {
        expect {
            "ermit>" { break }
            "\\?\[A-Z]" {
                puts "ERROR: Failed to set up kermit parameters"
            }
            timeout {
                puts "ERROR: Time out setting up kermit parameters"
            }
        }
    }
}

send "connect\r"
while 1 {
    expect {
        "ype the escape character*" {
            break
        }
        timeout {
            puts "\nERROR: Can't connect to serial port\n"
            exit
        }
    }
}

step "Match the prompt info."

set timeout 50
while 1 {
    expect {
        "Hit any key" {
            send "\r"
            break

        }
        " 2 " {
            send "\r"
            break
        }
        timeout {
            send "\r"
            send_user "u-boot miss the hit any key prompt\n"
            break
        }
    }
}

set timeout 5
expect -re $uboot_prompt
send "\r"
expect -re $uboot_prompt

send_user "\nEnding reset_board_test.exp\n"
log_file
