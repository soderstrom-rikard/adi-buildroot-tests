#!/usr/bin/expect

# This file couldn't be indepently executed.
# It is meant to be included into ***_test.exp scripts.

send_user "Try to figure out if we are in u-boot or the kernel"
set where_are_we 0
send " \r"
expect ">|#"
send "version\r"
set timeout 20
while 1 {
    expect {
        "U-Boot" {
            expect -re $uboot_prompt
            send_user "We are in u-boot\n"
            set where_are_we "uboot"
            break
        }

        "not found" {
            expect -re $kernel_prompt
            send_user "We are in the kernel\n"
            set where_are_we "kernel"
            break
        }

        timeout {
            send_user "Can't tell if we are in u-boot or the kernel\n"
            #If the first version command doesn't work, run it once again.
            send "version\r"
        }
    }
}

if { $where_are_we == "uboot" } {
    set timeout 50
    send -s "reset\r"
    send_user "sending reset\n"
} else {
    if { $where_are_we == "kernel" } {
        set timeout 60
        send -s "reboot\r"
        send_user "sending reboot\n"
    } else {
# If we don't know where we are, hit control-C and enter
        set timeout 10
        expect "*"
        send_user "sending control-C\n"
        send "\3"
        sleep 1
        send "\r"
    }
}

set timeout 180
while 1 {
    expect {
        -re "login:" {
            set timeout 15
            send "root\r"
            expect -re $kernel_prompt
            send_log "successful boot attempt"
            break
        }

        -re "Linux version (.*) " {
            set linux_version $expect_out(1,string)
        }

        -re "gcc version (\[0-9](\.\[0-9]+)+)" {
            set gcc_version [lindex $expect_out(0,string) 2]
        }

        -re "(Trace:.*\r\n\r\n)|(Kernel panic)" {
            expect -re $kernel_prompt
            send_user "\nKernel booting up with dump info or panic\n"
            send_log "\n$TITLE ............\[FAIL\]\n"
            exit
        }

        timeout {
            send_user "Reboot the linux kernel timeout!\n"
            break
        }
    }
}

set timeout 10
send "ifconfig usb0 $targetip\r"
while 1 {
    expect {
        -re "usb0: link up" {
            sleep 2
            break
        }

        timeout {
            send_user "Fail to enable ethernet\n"
            break
        }
    }
}
