#!/usr/bin/expect
#
# Test usb camera driver on target board
#
# Usage:
#   ./usb_camera_test.exp board_type
#
# Example:
#   ./usb_camera_test.exp BF609-EZKIT
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit"
source ../common/spawn_kermit.exp

step "Boot kernel"
# Different bootargs can be set here.
# For example:
# set bootargs $bootargs_param1
source ../common/kernel_boot.exp

set timeout 10
expect -re $kernel_prompt

step "Start testing"
set case_num 0

step "Clean src directory\n"
incr case_num
set timeout 5
spawn make clean
while 1 {
    expect {
        "*error*" {
            send_user "\nMake clean failed\n"
            case_fail $case_num
        }
        eof {
            send_user "\nMake clean.\n"
            break
        }
        timeout {
            break
        }
    }
}

step "Build test program\n"
spawn make
while 1 {
    expect {
        "*error*" {
            send_user "\nBuild test program failed\n"
            case_fail $case_num
        }
        eof {
            send_user "\nBuild test program done\n"
            break
        }
        timeout {
            break
        }
    }
}

set spawn_id $kermit_spawn_id

set timeout 15
send "ifconfig eth0 $targetip up\r"
expect -nocase -re "up.*full"

set allcases {1-1 2-1 3-1 4-1 5-1 6-1 7-1 8-1 9-1 10-1 11-1 12-1}
set casenum [llength $allcases]
send_user "casenum=$casenum\n"

set timeout 20
step "Copy testcase to target board\n"
for {set i 0} {$i < $casenum} {incr i} {
    spawn rcp [lindex $allcases $i] root@$targetip:/.
    while 1 {
        expect {
            "*connect*" {
                send_user "\nCopy testcases to target board failed\n"
                case_fail $case_num
            }
            eof {
                send_user "\nCopy testcases to target board done\n"
                break
            }
            timeout {
                break
            }
        }
    }
}

set spawn_id $kermit_spawn_id
set timeout 2
set testres 0

send "echo \"nobody:x:1:1:nobody:/:/bin/sh\" >> /etc/passwd\n"

for {set i 0} {$i < $casenum} {incr i} {
    send "./[lindex $allcases $i]\n"
    sleep 2
    while 1 {
        expect {
            -re "PASSED" {
                send_user "\n########### Case [lindex $allcases $i] pass\n"
                incr testres
            }
            eof {
                break
            }
            timeout {
                break
            }
        }
    }
}

if { $testres != 12 } {
    case_fail $case_num
} else {
    all_pass
}

send_user "Ending $argv0\n"
log_file
