#!/usr/bin/expect
#
# TFT LCD driver test
#
# Usage:
#   ./tftlcd_test.exp board_type
#
# Example:
#   ./tftlcd_test.exp BF537-STAMP
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit"
source ../common/spawn_kermit.exp

step "Boot kernel"
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs  $bootargs_param1
source ../common/kernel_boot.exp


step "Start testing."
set case_num 0

set timeout 10
expect -re $kernel_prompt
send "\r"
expect -re $kernel_prompt

if { $board_type == "BF548-EZKIT" } {
    set module "bf54x_lq043fb"
} elseif {$board_type == "BF527-EZKIT" } {
    set module "bfin_t350mcqb_fb"
} elseif {$board_type == "BF527-EZKIT-V2" } {
    set module "bfin_lq035q1_fb"
} elseif {$board_type == "BF537-STAMP" } {
    set module "bf537_lq035"
} elseif {$board_type == "BF609-EZKIT" } {
    set module "bf609_nl8048"
} else {
    send_user "Wrong board type!\n"
    case_fail $case_num
}

incr case_num
send "modprobe $module\r"
while 1 {
    expect {
        -re "(\[eE]rror|\[fF]ail).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
send "lsmod\r"
while 1 {
    expect {
        -re "$module.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

# BF609-EZKIT need to use ad7879 touchscreen driver to light the balcklight
if { $board_type == "BF609-EZKIT" } {
    incr case_num
    send "modprobe ad7879-spi\r"
    while 1 {
        expect {
            -re "(\[eE]rror|\[fF]ail).*$kernel_prompt" {
                case_fail $case_num
            }
            -re "input: AD7879 Touchscreen as.*input.*$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                case_fail $case_num
            }
        }
    }

    start_backlight
}

sleep 5

set timeout 15
incr case_num
send "video_test\r"
while 1 {
    expect {
        -re "\r\n\[a-zA-Z0-9]" {
            case_fail $case_num
        }
        timeout {
            case_pass $case_num
            break
        }
    }
}

incr case_num
send -s "\3"
while 1 {
    expect {
         -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send "modprobe -r $module\r"
while 1 {
    expect {
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send "lsmod\r"
while 1 {
    expect {
        -re "$module.*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
