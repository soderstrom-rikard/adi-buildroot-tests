#!/usr/bin/expect
#
# Build Kernel for tft lcd driver test
#
# Usage:
#   ./build_tftlcd_kernel.exp board_type
#
# Example:
#   ./build_tftlcd_kernel.exp BF537-STAMP
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $src_root/testsuites/common
step "Make default config"
source make_default_config.exp

step "Make kernel config"
cd $src_root
set timeout 300
spawn make linux-config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(NEW\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "I2C support \\\(I2C\\\).*\\\[.*]" {
            send "Y\r"
        }

        -re "Blackfin TWI I2C support.*I2C_BLACKFIN_TWI.*\\\[.*]" {
            send "Y\r"
        }

        -re "Support for generic platform NAND driver.*MTD_NAND_PLATFORM.*\\\[.*]" {
            #conflict with TFT LCD
            send "N\r"
        }

        -re "Support for frame buffer devices.*FB.*\\\[.*]" {
            send "Y\r"
        }

        -re "Backlight & LCD device support.*BACKLIGHT_LCD_SUPPORT.*\\\[.*]" {
            send "Y\r"
        }

        -re "SHARP LQ043 TFT LCD.*BF548 EZKIT.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" } {
                send "M\r"
            } else {
                send "N\r"
            }
        }

        -re "Varitronix COG-T350MCQB TFT LCD display.*FB_BFIN_T350MCQB.*\\\[.*]" {
            if { $board_type == "BF527-EZKIT" } {
                send "M\r"
            } else {
                send "N\r"
            }
        }

        -re "SHARP LQ035Q1DH02 TFT LCD.*FB_BFIN_LQ035Q1.*\\\[.*]" {
            if { $board_type == "BF527-EZKIT-V2" } {
                send "M\r"
            } else {
                send "N\r"
            }
        }

#LQ035 on BF537-STAMP
        -re "SPI controller driver for ADI Blackfin5xx.*SPI_BFIN5XX.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "M\r"
            } else {
                send "\r"
            }
        }

        -re "SHARP LQ035 TFT LCD.*FB_BF537_LQ035.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" } {
                send "M\r"
            } else {
                send "N\r"
            }
        }

        -re "($anomalous_option) \\\[\[^\]]+/.]" {
            send "\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            send_user "\nEnd of configuration\n"
            break
        }

        timeout {
            send_user "\n\nFATAL ERROR: config prompt timeout in make config\n"
            exit
        }
    }
}

step "user space config"
cd $src_root
set timeout 300
spawn make config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(new\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "video test program.*BR2_PACKAGE_VIDEO_TEST.*\\\[.*]" {
            send "Y\r"
        }

        -re "($anomalous_option) \\\[\[^\]]+/.]" {
            send "\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            send_user "\nEnd of configuration\n"
            break
        }

        timeout {
            send_user "\n\nFATAL ERROR: config prompt timeout in make config\n"
            exit
        }
    }
}

cd $src_root/testsuites/common
step "Make"
source make_kernel.exp

cd $src_root/testsuites/common
step "Copy image"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
