#!/usr/bin/expect
#
# directfb test
#
# Usage:
#   ./directfb_test.exp board_type
#
# Example:
#   ./directfb_test.exp BF537-STAMP
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit"
source ../common/spawn_kermit.exp

step "Boot kernel"
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
set bootargs  $bootargs_param9
source ../common/kernel_boot.exp

proc start_backlight {} {
    global case_num
    global kernel_prompt

    incr case_num
    send "cd /sys/class/gpio; ls\r"
    while 1 {
        expect {
            -re "(\[eE]rror|\[fF]ail|No such).*$kernel_prompt" {
                case_fail $case_num
            }
            -re "gpiochip112.*$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                case_fail $case_num
            }
        }
    }

    incr case_num
    send "echo 112 > export; ls\r"
    while 1 {
        expect {
            -re "(\[eE]rror|\[fF]ail|No such).*$kernel_prompt" {
                case_fail $case_num
            }
            -re "gpio112.*$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                case_fail $case_num
            }
        }
    }

    incr case_num
    send "cd gpio112; ls\r"
    while 1 {
        expect {
            -re "(\[eE]rror|\[fF]ail|No such).*$kernel_prompt" {
                case_fail $case_num
            }
            -re "direction.*$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                case_fail $case_num
            }
        }
    }

    incr case_num
    send "cat direction; cat value\r"
    while 1 {
        expect {
            -re "(\[eE]rror|\[fF]ail|No such).*$kernel_prompt" {
                case_fail $case_num
            }
            -re "in.*0.*$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                case_fail $case_num
            }
        }
    }

    # After this step, backlight should be light up.
    incr case_num
    send "echo high > direction\r"
    while 1 {
        expect {
            -re "(\[eE]rror|\[fF]ail|No such).*$kernel_prompt" {
                case_fail $case_num
            }
            -re $kernel_prompt {
                case_pass $case_num
                break
            }
            timeout {
                case_fail $case_num
            }
        }
    }

    incr case_num
    send "cat direction; cat value\r"
    while 1 {
        expect {
            -re "(\[eE]rror|\[fF]ail|No such).*$kernel_prompt" {
                case_fail $case_num
            }
            -re "out.*1.*$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                case_fail $case_num
            }
        }
    }

    send "cd\r"
    expect -re $kernel_prompt
}


step "Start testing"
set case_num 0

set timeout 15
expect -re $kernel_prompt
send "\r"
expect -re $kernel_prompt

set timeout 5
incr case_num
send "dmesg |grep -i \"tty0\"\r"
while 1 {
    expect {
        -re "enabled.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send "dmesg |grep -i frame\r"
while 1 {
    expect {
        -re "Console: switching to colour frame buffer device.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

if { $board_type == "BF609-EZKIT" } {
    start_backlight
} else {
    set timeout 5
    incr case_num
    send "dmesg |grep initializ\r"
    while 1 {
        expect {
            -re "(lq035|lq043|t350mcqb).*$kernel_prompt" {
                case_pass $case_num
                break
            }
            timeout {
                case_fail $case_num
            }
        }
    }
}

set timeout 180
incr case_num
send "df_dok --noresults\r"
while 1 {
    expect {
        -re "Stretch Blit colorkeyed.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
