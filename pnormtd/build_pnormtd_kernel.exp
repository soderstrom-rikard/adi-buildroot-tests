#!/usr/bin/expect

source ../common/kernel_config.exp
source  ../common/board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $src_root/testsuites/common
step "Make config."
source  make_default_config.exp

# Following make specific configuration for this case.

cd $src_root/testsuites/common
source  config_cut_app.exp

cd $src_root/testsuites/common
source  make_mtd_config.exp

cd $src_root/testsuites/pnormtd
source  make_parallel_config.exp

step "Make kernel config"
cd $src_root
set timeout 300
spawn make linux-config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {

        -nocase -re "\\\[\[^\r]*] (\\\(new\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "($anomalous_option) \\\[\[^\]]+/.]" {
            send "\r"
        }

        -re "Default bootloader kernel arguments.*CMDLINE_BOOL.*\\\[.*]" {
             send -s "N\r"
       }

        -re "Initial RAM filesystem and RAM disk.*initramfs/initrd.*support.*BLK_DEV_INITRD.*\\\[.*]" {
            send "Y\r"
        }

        -re "Generic uClinux RAM/ROM filesystem support.*MTD_UCLINUX.*\\\[.*]" {
            send "N\r"
        }

        -re "Miscellaneous filesystems.*MISC_FILESYSTEMS.*\\\[.*]" {
            send "Y\r"
        }

        -re "Journalling Flash File System v2.*JFFS2.*support.*JFFS2_FS.*\\\[.*]" {
            send "Y\r"
        }

        -re "Second extended fs support.*EXT2_FS.*\\\[.*]" {
            send "Y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $src_root/testsuites/common
step "Make"
source  make_kernel.exp

cd $src_root/testsuites/common
step "Copy linux"
source   copy_image.exp

send_user "Ending $argv0\n"
log_file
