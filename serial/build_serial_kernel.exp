#!/usr/bin/expect
#
# Build script for UART serial driver test.
#
# Usage:
#   ./build_serial_kernel.exp board_type
#
# Examples:
#   ./build_serial_kernel.exp BEAGLE
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $src_root/testsuites/common
step "Make default config"
source make_default_config.exp

step "Make kernel config"
cd $src_root
set timeout 300
spawn make linux-config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(new\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "($anomalous_option) \\\[\[^\]]+/.]" {
            send "\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $src_root/testsuites/common
step "Make"
source make_kernel.exp

step "Copy image with tty"
if [ catch {exec cp $src_root/output/images/$boot_image /tftpboot/$boot_image.serial} ] {
    send_user "$errorInfo\n"
    exit
}

step "Modify inittab to disable tty"
if [ catch {exec sed -i "s/^tty0/#tty0/" $src_root/output/target/etc/inittab} ] {
    send_user "$errorInfo\n"
    exit
}

step "Make for kernel without tty"
cd $src_root/testsuites/common
source make_kernel.exp

step "Copy image without tty"
if [ catch {exec cp $src_root/output/images/$boot_image /tftpboot/$boot_image.serial.no_tty} ] {
    send_user "$errorInfo\n"
    exit
}

if [ catch {exec mv /tftpboot/$boot_image.serial $src_root/output/images/$boot_image } ] {
    send_user "$errorInfo\n"
    exit
}

cd $src_root/testsuites/common
step "Copy image"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
