#!/usr/bin/expect
#
# Build script for UART serial driver test.
#
# Usage:
# 1. If tty_status is not defined, use default tty config:
#   ./build_serial_kernel.exp board_type
# 2. If tty_status is set to no_tty, tty is disabled: 
#   ./build_serial_kernel.exp board_type no_tty
#
# Examples:
#   ./build_serial_kernel.exp beagle
#   ./build_serial_kernel.exp beagle no_tty
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

set tty_status "tty"
if { $argc == 2} {
    set tty_status [lindex $argv 1]
    send_user "\n#### Build kernel with $tty_status\n"
}

cd $src_root/testsuites/common
step "Make default config"
source make_default_config.exp

cd $src_root/testsuites/common
source cut_app.exp

step "Make kernel config"
cd $kernel_config_dir
set timeout 300
spawn make ARCH=$arch config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(new\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $src_root/testsuites/common
step "Make"
source make_kernel.exp

if { $tty_status == "no_tty" } {
    if [ catch {exec sed -i "s/^tty0/#tty0/" $src_root/output/target/etc/inittab} ] {
        send_user "$errorInfo\n"
        exit
    }

    cd $src_root/testsuites/common
    step "Make for kernel without tty"
    source make_kernel.exp
}

cd $src_root/testsuites/common
step "Copy linux"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
