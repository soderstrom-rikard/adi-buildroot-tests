#!/usr/bin/expect
#
# bluetooth test
#
# Usage:
#   ./bluetooth_test.exp board_type
#
# Example:
#   ./bluetooth_test.exp BF537-STAMP
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit"
source ../common/spawn_kermit.exp

step "Boot kernel"
source ../common/kernel_boot.exp

step "Start testing"
sleep 5
set case_num 0
set SLV_BD_NAME "linux58-mmc-usblan-btuart"

set timeout 10
incr case_num
send "hciconfig hci0 up\r"
while 1 {
    expect {
        -nocase -re "(no such|hciconfig:).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

sleep 2
set timeout 5
incr case_num
send "hciconfig\r"
while 1 {
    expect {
        -nocase -re "(down|not found).*$kernel_prompt" {
            case_fail $case_num
        }
        -re "BD Address.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_user "hci0 not up\r"
            case_fail $case_num
        }
    }
}

sleep 2
set timeout 60
incr case_num
send "hcitool scan\r"
while 1 {
    expect {
        -re "(Inquiry failed:|not found).*$kernel_prompt" {
            case_fail $case_num
        }
        -re "\t(\[0-9A-F:]+)\t$SLV_BD_NAME.*$kernel_prompt" {
            set SLV_BD_ADDR $expect_out(1,string)
            case_pass $case_num
            break
        }
        timeout {
            send_user "timeout: scan device\r"
            case_fail $case_num
        }
    }
}

sleep 2
set timeout 30
incr case_num
send "hcitool -i hci0 info $SLV_BD_ADDR\r"
while 1 {
    expect {
        -re "not found.*$kernel_prompt" {
            case_fail $case_num
        }
        -re "BD Address.*$SLV_BD_ADDR.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_user "timeout: get info\r"
            case_fail $case_num
        }
    }
}

sleep 2
set timeout 30
incr case_num
send "l2ping -c 50 -i hci0 -f $SLV_BD_ADDR\r"
while 1 {
    expect {
        -re "(not found|Can't connect:).*$kernel_prompt" {
            case_fail $case_num
        }
        -re "50 sent, 50 received, 0% loss\r\n$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_user "timeout: ping bluetooth device\r"
            case_fail $case_num
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
