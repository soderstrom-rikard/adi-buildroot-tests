#!/usr/bin/expect

source ../common/kernel_config.exp
source ../common/board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../common/spawn_kermit.exp

step "Reboot the kernel."
source ../common/reboot_kernel.exp

step "Starting test."
set case_num 0
set timeout 8
expect -re $kernel_prompt

if { $board_type == "BF537-STAMP" || [string match "BF527-EZKIT*" $board_type] || $board_type == "BF518F-EZBRD" || $board_type == "BF526-EZBRD" } {
    set module_name bfin_mac
} elseif { $board_type == "BF548-EZKIT" } {
    set module_name smsc911x
} elseif { $board_type == "BF609-EZKIT" } {
    set module_name stmmac
} elseif { $board_type == "BF533-STAMP" || $board_type == "BF533-EZKIT" || $board_type == "BF561-EZKIT" || $board_type == "BF538-EZKIT"  } {
    set module_name smc91x
}

set timeout 5
incr case_num
send -s "modprobe $module_name\r"
while 1 {
    expect {
        -re "(Blackfin on-chip Ethernet MAC driver|Alternate descriptors).*$kernel_prompt" {
            case_pass $case_num
            break
        }
        -re "eth0: Ethernet addr.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        -re "\[Dd]river.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send -s "lsmod\r"
while 1 {
    expect {
        -re "$module_name.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 10
send -s "ifconfig eth0 $targetip up\r"
expect -re "Full|(lpa 0x41E1)"

set timeout 5
incr case_num
send -s "ifconfig\r"
while 1 {
    expect {
        -re "eth0.*inet addr:$targetip.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 10
incr case_num
send -s "ping -c 5 $serverip\r"
while 1 {
    expect {
        -re " 0% packet loss.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send -s "rmmod $module_name\r\r"
while 1 {
    expect {
        -nocase -re "(no|error|failure).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send -s "lsmod\r"
while 1 {
    expect {
        -re "$module_name" {
            case_fail $case_num
        }
        -re "Used by\r\n$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_pass $case_num
            break
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
