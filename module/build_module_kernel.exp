#!/usr/bin/expect

source ../common/kernel_config.exp
source ../common/board_info.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

cd $src_root/testsuites/common

step "Make config."

source  make_default_config.exp

# Following make specific configuration for this case.

#tee "Begin the interactive process of configuration"
step "Make kernel config"
cd $src_root
set timeout 300
spawn make linux-config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(new\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "($anomalous_option) \\\[\[^\]]+/.]" {
            send "\r"
        }

        -re "Enable loadable module support.*MODULES.*\\\[.*]" {
            send -s "Y\r"
        }

        -re "Module unloading.*MODULE_UNLOAD.*\\\[.*]" {
            send -s "Y\r"
        }

        -re "Automatic kernel module loading.*KMOD.*\\\[.*]" {
            send -s "Y\r"
        }

        -re "Ethernet driver support.*ETHERNET.*\\\[.*]" {
            send -s "Y\r"
        }

        -re "SMC 91C9x/91C1xxx support.*SMC91X.*\\\[.*]" {
            if { $board_type == "BF533-STAMP" || $board_type == "BF533-EZKIT" || $board_type == "BF561-EZKIT" || $board_type == "BF538-EZKIT" } {
                send -s "M\r"
            } else {
                send -s "\r"
            }
        }

        -re "Blackfin on-chip MAC support.*BFIN_MAC.*\\\[.*]" {
            if { $board_type == "BF537-STAMP" || [string match "BF527-EZKIT*" $board_type] || $board_type == "BF518F-EZBRD" || $board_type == "BF526-EZBRD" } {
                send -s "M\r"
            } else {
                send -s "\r"
            }
        }

        -re "SMSC LAN911x/LAN921x families embedded ethernet support.*SMSC911X.*\\\[.*]" {
            if { $board_type == "BF548-EZKIT" } {
                send -s "M\r"
            } else {
                send -s "\r"
            }
        }

        -re " STMicroelectronics 10/100/1000 Ethernet driver.*STMMAC_ETH.*\\\[.*]" {
            if { $board_type == "BF609-EZKIT" } {
                send -s "M\r"
            } else {
                send -s "\r"
            }
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            send_user "End of configuration"
            break
        }

        timeout {
            send_user "\n\nFATAL ERROR: config prompt timeout in make config"
            break
        }
    }
}

cd $src_root
set timeout 300
set baud_rate_done_flag 0
spawn make config

#puts "Begin the interactive process of configuration"
while 1 {
    expect {

        -nocase -re "\\\[\[^\r]*] (\\\(new\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }


        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            puts "End of configuration"
            break
        }

        timeout {
            puts "\n\nFATAL ERROR: config prompt timeout in make config"
        }
    }
}

cd $src_root/testsuites/common

step "Make"

source  make_kernel.exp

cd $src_root/testsuites/common

step "Copy linux"

source   copy_image.exp

send_user "Ending $argv0\n"
log_file
