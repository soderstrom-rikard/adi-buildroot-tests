#!/usr/bin/expect
#
# Test usb camera driver on target board
#
# Usage:
#   ./usb_camera_test.exp board_type
#
# Example:
#   ./usb_camera_test.exp BF609-EZKIT
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit"
source ../common/spawn_kermit.exp

step "Boot kernel"
# Different bootargs can be set here.
# For example:
# set bootargs $bootargs_param1
source ../common/kernel_boot.exp

set timeout 10
expect -re $kernel_prompt
send "\r"
expect -re $kernel_prompt

step "Start testing"
set case_num 0

incr case_num
set timeout 20
send "ffmpeg -f video4linux2 -r 5 -s 320x240 -i /dev/video0 -vcodec mpeg4 -f mp4 usb_camera.mp4\r"
while 1 {
    expect {
        -re "\[eE]rror|\[fF]ail|Hardware Trace|SIGSEGV" {
            case_fail $case_num
        }
        -re "Stream mapping.*kbits/s" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

sleep 10

incr case_num
set timeout 10
send "q"
while 1 {
    expect {
        -re "\[eE]rror|\[fF]ail|Hardware Trace|SIGSEGV" {
            case_fail $case_num
        }
        -re "video.*audio.*global headers.*muxing overhead.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}


if [ catch {exec rcp root@$targetip:/usb_camera.mp4 ./} ] {
    send_user "FAIL: rcp usb_camera.mp4 to host PC\n"
    send_user "$errorInfo\n"
    case_fail $case_num
} else {
    send_user "PASS: rcp usb_camera.mp4 to host PC\n"
}

while 0 {
send "export SDL_NOMOUSE=1\n"
expect -re $kernel_prompt

incr case_num
set timeout 10
send "ffplay usb_camera.mp4\n"
while 1 {
    expect {
        -re "\[eE]rror|\[fF]ail|Hardware Trace|SIGSEGV" {
            case_fail $case_num
        }
        -re "Video: mpeg4, yuv420p, 320x240.*A-V:" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

sleep 9

incr case_num
set timeout 8
send -s "\3"
while 1 {
    expect {
        -re "\[eE]rror|\[fF]ail|Hardware Trace|SIGSEGV" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}
}

all_pass
send_user "Ending $argv0\n"
log_file
