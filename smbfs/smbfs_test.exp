#!/usr/bin/expect

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"
set TITLE [title "$argv0"]

step "Start kermit."
source ../common/spawn_kermit.exp

step "Reboot the kernel."
source ../common/reboot_kernel.exp

step "Start tetsting."

set case_num 0

set timeout 8
send "ifconfig eth0 $targetip\r" 
while 1 {
    sleep 3
    expect {
       -re $kernel_prompt {
            break
        }
        timeout {
            puts "Fail ifconfig. "
            break
        }
    }
}

sleep 3
send "ifconfig\r"
while 1 {
    expect {
        -re "$targetip" {        
            expect -re $kernel_prompt
            break
        }
        timeout {
            puts "Fail ifconfig. "         
            break
        }
    }
}

set timeout 20
incr case_num
send -s "mount -t cifs //$serverip/users /mnt  -o rw,user=$name,pass=$name\r" 
while 1 {
    expect  {
        -nocase -re "(mount:|error|fail).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send -s "cp /bin/version /mnt/$name\r"
while 1 {
    expect {
        -nocase -re "(cp:|error|fail).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send -s "ls /mnt/$name\r" 
while 1 {
    expect {
        -re "version.*$kernel_prompt" {         
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 5
incr case_num
send -s "rm -f /mnt/$name/version\r"
while 1 {
    expect {
        -nocase -re "(rm:|error|fail).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 20
incr case_num
send -s "umount.cifs /mnt\r" 
while 1 {
    expect {
        -nocase -re "(umount:|error|fail).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {         
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 3
send -s "ls /mnt\r"
while 1 {
    expect {
        -re "home.*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {         
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
