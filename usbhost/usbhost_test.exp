#!/usr/bin/expect
#
# USB host test with a usb memory card
# USB host driver includes ISP1362, SL811, ISP1760 and musb.
#
# Usage:
#   ./usbhost_test.exp board_type usb_driver musb_mode
#
# Example:
#   ./usbhost_test.exp BF537-STAMP usbhost_1362
#   ./usbhost_test.exp BF609-EZKIT dma
#

source ../common/kernel_config.exp

if { $argc < 2} {
    puts "Please input: board_type, usb_driver(usbhost_isp1362, usbhost_sl811, usbhost_isp1760, musb or otg)\n"
    puts "If musb or otg is used, please also input: musb_mode(dma or pio)\n"
    exit
}
set usb_driver [lindex $argv 1]

if { $usb_driver == "musb" || $usb_driver == "otg" } {
    if { $argc > 2 } {
        set musb_mode [lindex $argv 2]
    } else {
        set musb_mode "dma"
    }

    if { $usb_driver == "musb" } {
        set log_name usbhost_musb_${musb_mode}_test_log
    }

    if { $usb_driver == "otg" } {
        set log_name usbotg_host_${musb_mode}_test_log
    }
} else {
    set log_name ${usb_driver}_test_log
}

set TITLE [title "$argv0"]
append TITLE " ($usb_driver)"
if [ info exists musb_mode ] {
    append TITLE " ($musb_mode)"
}

log_file $log_name
send_user "Starting $argv0\n"
send_user "\n#### Testing usb driver is $usb_driver. ####\n"


step "Start kermit"
source ../common/spawn_kermit.exp

step "Boot kernel"
# Different bootargs can be set here.
# For example:
# set bootargs $bootargs_param1
source ../common/kernel_boot.exp


step "Start testing"
set case_num 0
set timeout 20
expect "Attached SCSI removable disk"
send "\r"
expect -re $kernel_prompt

if { $board_type == "BF548-EZKIT" } {
    set usb_dev sdb
    set usb_dev1 sdb1
    set usb_dev2 sdb2
} else {
    set usb_dev sda
    set usb_dev1 sda1
    set usb_dev2 sda2
}

incr case_num
set timeout 5
send "dmesg|grep -i sd\r"
while 1 {
    expect {
        -re "$usb_dev.*$usb_dev1 $usb_dev2.*Attached SCSI removable disk.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

sleep 5
incr case_num
set timeout 120
send "mke2fs /dev/$usb_dev1\r"
while 1 {
    expect {
        -nocase -re "(mke2fs:|fail|error).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 5
send "mount -t ext2 /dev/$usb_dev1 /mnt\r"
while 1 {
    expect {
        -re "(mount:|\[fF]ail|\[eE]rror).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            break
        }
    }
}

incr case_num
set timeout 5
send "mount\r"
while 1 {
    expect {
        -re "/dev/$usb_dev1 on /mnt type ext2.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 5
send "echo teststring > /mnt/usbhost_testfile; cat /mnt/usbhost_testfile\r"
while 1 {
    expect {
        -re "teststring\r\n$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 400
send "time dd conv=fsync if=/dev/zero of=/mnt/10m.bin bs=1M count=10\r"
while 1 {
    expect {
        -re "records in.*records out.*real.*user.*sys.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_user "Generate a 10M file timeout, test fail\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 5
send "rm /mnt/usbhost_testfile; rm /mnt/*.bin\r"
while 1 {
    expect {
        -re "(rm:|\[eE]rror|\[fF]ail).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

send "ls /mnt/\r"
set timeout 2
while 1 {
    expect {
        -re "usbhost_testfile|10m\.bin" {
            case_fail $case_num
            break
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 10
incr case_num
send "umount /mnt\r"
while 1 {
    expect {
        -re "umount:.*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            break
        }
        timeout {
            send -s "\3"
            break
        }
    }
}

send "mount\r"
while 1 {
    expect {
        -re "/dev/$usb_dev1 on /mnt type ext2.*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 60
send "mkdosfs -F 32 /dev/$usb_dev2\r"
while 1 {
    expect {
        -nocase -re "(mkdosfs:|fail|error).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 5
send "mount /dev/$usb_dev2 /mnt\r"
while 1 {
    expect {
        -re "(mount:|\[fF]ail|\[eE]rror).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            break
        }
    }
}

incr case_num
set timeout 5
send "mount\r"
while 1 {
    expect {
        -re "/dev/$usb_dev2 on /mnt type vfat.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 5
send "echo teststring > /mnt/usbhost_testfile; cat /mnt/usbhost_testfile\r"
while 1 {
    expect {
        -re "teststring\r\n$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 400
send "time dd conv=fsync if=/dev/zero of=/mnt/10m.bin bs=1M count=10\r"
while 1 {
    expect {
        -re "records in.*records out.*real.*user.*sys.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_user "Generate a 10M file timeout, test fail\n"
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 5
send "rm /mnt/usbhost_testfile; rm /mnt/*.bin\r"
while 1 {
    expect {
        -re "(rm:|\[eE]rror|\[fF]ail).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

send "ls /mnt/\r"
set timeout 2
while 1 {
    expect {
        -re "usbhost_testfile|10m\.bin" {
            case_fail $case_num
            break
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 10
incr case_num
send "umount /mnt\r"
while 1 {
    expect {
        -re "umount:.*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            break
        }
        timeout {
            send -s "\3"
            break
        }
    }
}

send "mount\r"
while 1 {
    expect {
        -re "/dev/$usb_dev2 on /mnt type vfat.*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}


step "Start bonnie++ test"

incr case_num
set timeout 60
send "mke2fs /dev/$usb_dev1\r"
while 1 {
    expect {
        -nocase -re "(mke2fs:|fail|error).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

incr case_num
set timeout 5
send "mount -t ext2 /dev/$usb_dev1 /mnt\r"
while 1 {
    expect {
        -re "(mount:|\[fF]ail|\[eE]rror).*$kernel_prompt" {
            case_fail $case_num
        }
        -re $kernel_prompt {
            case_pass $case_num
            break
        }
        timeout {
            break
        }
    }
}

set timeout 3600
incr case_num
send "time bonnie++ -u root -d /mnt -s 200M\r"
while 1 {
    expect {
        -re "Hardware Trace" {
            send_user "bonnie++ failed\n"
            case_fail $case_num
        }
        -re "Latency.*$kernel_prompt" {
            case_pass $case_num
            break
        }
        timeout {
            send_user "bonnie++ timeout\n"
            case_fail $case_num
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
