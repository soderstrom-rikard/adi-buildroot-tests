#!/usr/bin/expect
#
# Build script for mplayer application test.
#
# Usage:
#   ./build_mplayer_kernel.exp board_type
#
# Example:
#   ./build_mplayer_kernel.exp BF609-EZKIT
#

source ../common/kernel_config.exp
log_file [log_file_name "$argv0"]
send_user "Starting $argv0\n"

# Command source_args can pass arguments while running source.
# Send bfin binary formats as argument for make_bfin-format.exp,
# and change to the specified bfin binary formats.
# It won't change formats for arm.
# make clean and source make_default_config.exp are already included.
cd $src_root/testsuites/common
step "Make config for specified bfin format"
source_args make_bfin-format.exp fdpic

cd $src_root/testsuites/common
step "Kernel config for tft lcd driver"
source_args config_tftlcd.exp built-in

step "Make kernel config"
cd $src_root
set timeout 300
spawn make linux-config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(NEW\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

# Large cache is required for video related test on bf609-ezkit
        -re "Uncached DMA region.*(\[0-9]). Enable 32M DMA region.*(\[0-9]). Enable 2M DMA region.*\[cC]hoice.*\\\[.*]" {
            if { $board_type == "BF609-EZKIT" } {
                send "$expect_out(1,string)\r"
            } elseif { [string match "BF*" $board_type] } {
                send "$expect_out(2,string)\r"
            } else {
                send "\r"
            }
        }

        -re "Sound card support.*SOUND.*\\\[.*]" {
            send "N\r"
        }

        -re "Use L1 memory for rx\\\/tx packets.*BFIN_MAC_USE_L1.*\\\[.*]" {
            send "N\r"
        }

        -re "($anomalous_option) \\\[\[^\]]+/.]" {
            send "\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            send_user "\nEnd of configuration\n"
            break
        }

        timeout {
            send_user "\n\nFATAL ERROR: config prompt timeout in make config\n"
            exit
        }
    }
}

step "user space config"
cd $src_root
set timeout 300
spawn make config
while 1 {
    expect {
        -nocase -re "\\\[\[^\r]*] (\\\(NEW\\\) )?(\[ymn])|choice\\\[.*]: \[0-9]+\r" {
            continue
        }

        -re "video test program.*BR2_PACKAGE_VIDEO_TEST.*\\\[.*]" {
            send "Y\r"
        }

        -re "mplayer \\\(BR2_PACKAGE_MPLAYER\\\).*\\\[.*]" {
            send "Y\r"
        }

        "\\\(*) \\\[*]" {
            sleep .01
            send "\r"
        }

        -re "\[cC]hoice\\\[.*]:" {
            send "\r"
        }

        eof {
            send_user "\nEnd of configuration\n"
            break
        }

        timeout {
            send_user "\n\nFATAL ERROR: config prompt timeout in make config\n"
            exit
        }
    }
}

cd $src_root/testsuites/common
step "Make"
source make_kernel.exp

cd $src_root/testsuites/common
step "Copy image"
source copy_image.exp

send_user "Ending $argv0\n"
log_file
