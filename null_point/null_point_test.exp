#!/usr/bin/expect

source  ../common/kernel_config.exp

log_file [log_file_name "$argv0"]

send_user "Starting $argv0\n"

set TITLE [title "$argv0"]

step "Spawn kermit"
source ../common/spawn_kermit.exp

step "Reboot the kernel."
# To add following line here to indicate that if the bootargs is different,
# it could be set here. If the bootargs value is 0, it needn't be stated,
# for it is the default value.
# set bootargs  $bootargs_param0
source ../common/reboot_kernel.exp
sleep 5
send "\r"
expect -re $kernel_prompt

set case_num 0
incr case_num

step "Clean src directory\n"
set timeout 30
spawn make clean -C src
while 1 {
    expect {
        -re "\[eE]rror" {
            case_fail $case_num
        }
        eof {
            send_user "\nClean src\n"
            break
        }
        timeout {
            break
        }
    }
}

step "Build test program\n"
spawn make -C src
while 1 {
    expect {
        -re "\[eE]rror" {
            case_fail $case_num
        }
        eof {
            send_user "\nBuild test program done\n"
            break
        }
        timeout {
            break
        }
    }
}


set spawn_id $kermit_spawn_id

send "ifconfig eth0 $targetip up\r"
set timeout 60
while 1 {
    expect {
        -re $kernel_prompt {
            send "\r"
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

sleep 5
send "ifconfig eth0\r"
set timeout 60
while 1 {
    expect {
        -re "$targetip.*$kernel_prompt" {
            break
        }
        timeout {
            case_fail $case_num
        }
    }
}

set timeout 100
step "Copy testcase to target board\n"
spawn rcp src/null_point root@$targetip:/
while 1 {
    expect {
        -re "connect|No route to host|No such file or directory" {
            case_fail $case_num
        }
        eof {
            send_user "\nCopy null_point to target board done\n"
            break
        }
        timeout {
            break
        }
    }
}

step "Start testing"
set spawn_id $kermit_spawn_id
set timeout 20
send "./null_point\r"
while 1 {
    expect {
        -re "Hardware Trace" {
            expect -re $kernel_prompt
            case_pass $case_num
            break
        }
        -re "No null point check" {
            case_fail $case_num
            break
        }
        timeout {
            send -s "\3"
            send_log "timeout\n"
            case_fail $case_num
            break
        }
    }
}

all_pass
send_user "Ending $argv0\n"
log_file
